<?php

// @author - vk.com/thedudeone

require_once "rabbit/autoload.php";
use DigitalStar\vk_api\vk_api;

const VK_KEY = "—Ç–æ–∫–µ–Ω";
const CONFIRM_STR = "—É–Ω–∏–∫–∞–ª—å–Ω—ã–π_–∫–ª—é—á";
const VERSION = "5.131";

$vk = vk_api::create(VK_KEY, VERSION)->setConfirm(CONFIRM_STR);

$data = json_decode(file_get_contents('php://input'), true);

if (!isset($data['type']) || !isset($data['object']['message'])) {
    exit();
}

$vk->initVars($peer_id, $message, $payload, $user_id, $type, $data);

$group = $peer_id > 2000000000;

if (!$group) {
    $vk->reply("‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –±–µ—Å–µ–¥—É, –≥–¥–µ —è —Ä–∞–±–æ—Ç–∞—é. –ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å —Ç—É–¥–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @thedudeone(–û—Å–Ω–æ–≤–∞—Ç–µ–ª—é)");
    exit();
}

$admins = ["–∞–π–¥–∏"];
$super = ["–∞–π–¥–∏"];

if ($type == "confirmation") {
    echo CONFIRM_STR;
    exit();
}

function loadParticipants() {
    $file = 'vk.json';
    if (file_exists($file)) {
        $contents = file_get_contents($file);
        return json_decode($contents, true);
    }
    return [];
}

function saveParticipants($participants) {
    $file = 'vk.json';
    $json = json_encode($participants);
    file_put_contents($file, $json);
}

function getMentionId($mention) {
    if (preg_match('/\[id(\d+)\|/', $mention, $matches)) {
        return $matches[1];
    } elseif (preg_match('/\[club(\d+)\|/', $mention, $matches)) {
        return '-' . $matches[1];
    } elseif (preg_match('/\[public(\d+)\|/', $mention, $matches)) {
        return '-' . $matches[1];
    }
    return null;
}

function getUserInfo($user_id) {
    return [
        'id' => $user_id,
        'registration_date' => date('Y-m-d H:i:s')
    ];
}

function isParticipantRegistered($user_id) {
    $participants = loadParticipants();
    return isset($participants[$user_id]);
}

function registerParticipant($user_info) {
    $participants = loadParticipants();
    $participants[$user_info['id']] = $user_info;
    saveParticipants($participants);
}

function kickUser($chat_id, $user_id, $vk) {
    try {
        $vk->request('messages.removeChatUser', [
            'chat_id' => $chat_id - 2000000000,
            'user_id' => $user_id
        ]);
        return true;
    } catch (Exception $e) {
        return false;
    }
}

function getRandomUserId($peer_id, $vk) {
    try {
        $response = $vk->request('messages.getConversationMembers', [
            'peer_id' => $peer_id
        ]);
        $members = $response['profiles'];
        $random_member = $members[array_rand($members)];
        return $random_member['id'];
    } catch (Exception $e) {
        return null;
    }
}

switch ($type) {
    case "message_new":
        if (isset($message) && !empty($message) && $message[0] == "!") {
            $message = strtolower(trim(ltrim($message, "!")));
            $parts = explode(" ", $message, 2);
            $command = $parts[0];
            $argument = isset($parts[1]) ? $parts[1] : null;

            switch ($command) {
                case "–ø—Ä–æ—Ñ":
                    $user_info = $vk->request('users.get', ['user_ids' => $user_id])[0];
                    $first_name = $user_info['first_name'];
                    $last_name = $user_info['last_name'];
                    $status = (in_array($user_id, $super)) ? "üî∞" : ((in_array($user_id, $admins)) ? "üü¢" : "üî¥");
                    $vk->reply("‚ú® –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\nüÜî –í–∞—à ID: $user_id\nüí¨ –ê–π–¥–∏ –±–µ—Å–µ–¥—ã: $peer_id\nüë§ –í–∞—à–µ –∏–º—è: $first_name $last_name\nüîñ –°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞: $status");
                    break;
                
                case "–≤–æ–π—Ç–∏":
                    if (isParticipantRegistered($user_id)) {
                        $vk->reply("‚ö†Ô∏è –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ.");
                    } else {
                        $user_info = getUserInfo($user_id);
                        registerParticipant($user_info);
                        $vk->reply("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!");
                    }
                    break;

                case "–±–∞–Ω":
                    if ($argument) {
                        $kick_user_id = intval($argument);
                        if (in_array($user_id, $super) || (in_array($user_id, $admins) && !in_array($kick_user_id, $super))) {
                            if (kickUser($peer_id, $kick_user_id, $vk)) {
                                $admin_info = $vk->request('users.get', ['user_ids' => $user_id])[0];
                                $kick_user_info = $vk->request('users.get', ['user_ids' => $kick_user_id])[0];
                                $admin_name = $admin_info['first_name'] . ' ' . $admin_info['last_name'];
                                $kick_user_name = $kick_user_info['first_name'] . ' ' . $kick_user_info['last_name'];
                                $vk->reply("üìù –ê–¥–º–∏–Ω [id$user_id|$admin_name] –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª —É—á–∞—Å—Ç–Ω–∏–∫–∞ [id$kick_user_id|$kick_user_name] –Ω–∞–≤—Å–µ–≥–¥–∞ –∏–∑ —á–∞—Ç–∞.");
                            } else {
                                $vk->reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å ID $kick_user_id. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ID –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.");
                            }
                        } else {
                            $vk->reply("üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –õ–∏–±–æ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –∏–º–µ–µ—Ç –≤—ã—Å—à–∏–π —Å—Ç–∞—Ç—É—Å.");
                        }
                    } else {
                        $vk->reply("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ ID —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.");
                    }
                    break;

                case "–∞–π–¥–∏":
                    if ($argument) {
                        $mention_id = getMentionId($argument);
                        if ($mention_id) {
                            $vk->reply("üîç –¶–∏—Ñ—Ä–æ–≤–æ–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n$mention_id");
                        } else {
                            $vk->reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤–µ—Ä–Ω–æ–µ.");
                        }
                    } else {
                        $vk->reply("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.");
                    }
                    break;

                case "—Ç–æ–≤–∞—Ä—ã":
                    $vk->reply("üí£ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏—Ö —Ü–µ–Ω—ã:\n\n–ò–≥—Ä–æ–∫ - 0—Ä\n–í–∏–ø - 5—Ä\n–ü—Ä–µ–º–∏—É–º - 10—Ä\n–ö—Ä–µ–∞—Ç–∏–≤ - 20—Ä\n–í–∞—Ä–≤–∞—Ä - 30—Ä\n–ü–∏—Ä–∞—Ç - 50—Ä\n–ò–º–ø–µ—Ä–∞—Ç–æ—Ä - 70—Ä\n–ö–Ω—è–∑—å - 100—Ä\n–ë—Ä–æ–¥—è–≥–∞ - 130—Ä\n\n–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä - –Ω–µ –ø—Ä–æ–¥–∞—ë—Ç—Å—è\n–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - –Ω–µ –ø—Ä–æ–¥–∞—ë—Ç—Å—è\n–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å - –Ω–µ –ø—Ä–æ–¥–∞—ë—Ç—Å—è\n\n–î–æ–Ω–∞—Ç –∫–µ–π—Å 1 —à—Ç - 30—Ä\n–î–æ–Ω–∞—Ç –∫–µ–π—Å 5 —à—Ç - 100—Ä\n\n100 000 –º–æ–Ω–µ—Ç - 30—Ä\n500 000 –º–æ–Ω–µ—Ç - 100—Ä\n1 000 000 –º–æ–Ω–µ—Ç - 200—Ä\n\nRCON START - 80—Ä\nRCON VIP - 300—Ä");
                    break;

                case "–∫—Ç–æ":
                    if ($argument) {
                        $random = getRandomUserId($peer_id, $vk);
                        if ($random) {
                            $vk->reply("üîç –Ø –¥—É–º–∞—é, [id$random|—ç—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫] $argument");
                        } else {
                            $vk->reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤–≤–µ–¥–µ–Ω–∞ –≤ –±–µ—Å–µ–¥–µ.");
                        }
                    } else {
                        $vk->reply("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.");
                    }
                    break;

                case "—Å–æ—Å—Ç–∞–≤":
                    $vk->reply("üë®üèª‚Äçüíº –ü–æ–ª–Ω—ã–π —Å–æ—Å—Ç–∞–≤ —Å–µ—Ä–≤–µ—Ä–∞:\n\n‚Äì –û—Å–Ω–æ–≤–∞—Ç–µ–ª–∏ ::\n@thedudeone(dudeone) üî∞\n\n‚Äì –ì–ª–∞–≤–Ω—ã–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã ::\n@vk.simbyyy(simbyyy) üü¢\n@hinayash(hinalove) üü¢\n\n‚Äì –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã ::\nnone\n\n‚Äì –°—Ç–∞–∂—ë—Ä—ã ::\nnone");
                    break;

                case "–ø–∞–Ω–µ–ª—å":
                    break;

                case "block":
                    break;

                case "–ø–æ–º–æ—â—å":
                    $vk->reply("üÜò –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:\n\n‚Äì –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n!–ø—Ä–æ—Ñ - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n!–≤–æ–π—Ç–∏ - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ\n!–∞–π–¥–∏ [—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ] - –ü–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n!–∫—Ç–æ [—Ç–µ–∫—Å—Ç] - –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞\n!–ø–æ–º–æ—â—å - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n!—Ç–æ–≤–∞—Ä—ã - –í—Å–µ —Ç–æ–≤–∞—Ä—ã —Å–µ—Ä–≤–µ—Ä–∞\n!—Å–æ—Å—Ç–∞–≤ - –í–µ—Å—å —Å–æ—Å—Ç–∞–≤ —Å–µ—Ä–≤–µ—Ä–∞\n\n‚Äì –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã:\n!–±–∞–Ω [ID] - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ —á–∞—Ç–∞ –Ω–∞–≤—Å–µ–≥–¥–∞\n!–ø–∞–Ω–µ–ª—å - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å\n!block [ID] - –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ RCON");
                    break;
               default:
                 $vk->reply("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –≤–≤–µ–¥–∏—Ç–µ !–ø–æ–º–æ—â—å –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏.");
            }
            echo 'ok';
            exit();
        }
        break;

    default:
        exit();
}
